# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Rfiu9ELDw6SYPaAzsBD65HSrSS-JaqYA
"""

pip install streamlit

import streamlit as st
import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import bisect

# Par√°metros del problema
r = 5.5  # radio de la esfera en cm
rho_esfera = 0.6
V_esfera = (4/3) * np.pi * r**3

# Funci√≥n objetivo
def f(d):
    V_sumergido = np.pi * d**2 * (r - d/3)
    return V_sumergido - rho_esfera * V_esfera

# M√©todo de Falsa Posici√≥n
def falsa_posicion(f, a, b, tol=1e-6, max_iter=100):
    for _ in range(max_iter):
        fa, fb = f(a), f(b)
        if fa * fb >= 0:
            raise ValueError("La funci√≥n no cambia de signo en el intervalo.")
        c = b - fb * (b - a) / (fb - fa)
        fc = f(c)
        if abs(fc) < tol or abs(b - a) < tol:
            return c
        if fa * fc < 0:
            b = c
        else:
            a = c
    return c

# Interfaz de usuario con Streamlit
st.title("üìê B√∫squeda de ra√≠ces en una esfera flotante")

st.sidebar.header("Opciones del m√©todo")
metodo = st.sidebar.selectbox("Seleccione el m√©todo num√©rico:", ["Bisecci√≥n", "Falsa Posici√≥n"])

# Intervalo inicial fijo
a, b = 0.1, 2 * r

# Bot√≥n para ejecutar el c√°lculo
if st.sidebar.button("Calcular ra√≠z"):
    try:
        if metodo == "Bisecci√≥n":
            raiz = bisect(f, a, b)
        elif metodo == "Falsa Posici√≥n":
            raiz = falsa_posicion(f, a, b)

        st.success(f"‚úÖ M√©todo: {metodo}")
        st.info(f"üìå Ra√≠z encontrada: d = {raiz:.6f} cm")

        # Gr√°fica
        d_vals = np.linspace(0, 2 * r, 400)
        f_vals = [f(d) for d in d_vals]

        fig, ax = plt.subplots()
        ax.plot(d_vals, f_vals, label="f(d)")
        ax.axhline(0, color='red', linestyle='--')
        ax.axvline(raiz, color='green', linestyle=':', label=f"Ra√≠z ({metodo})")
        ax.set_title("B√∫squeda de ra√≠ces")
        ax.set_xlabel("Profundidad d (cm)")
        ax.set_ylabel("f(d)")
        ax.legend()
        ax.grid(True)

        st.pyplot(fig)

    except Exception as e:
        st.error(f"‚ùå Error: {e}")